// Code generated by entc, DO NOT EDIT.

package dbpackage

const (
	// Label holds the string label denoting the dbpackage type in the database.
	Label = "db_package"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPkgbase holds the string denoting the pkgbase field in the database.
	FieldPkgbase = "pkgbase"
	// FieldPackages holds the string denoting the packages field in the database.
	FieldPackages = "packages"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldSkipReason holds the string denoting the skip_reason field in the database.
	FieldSkipReason = "skip_reason"
	// FieldRepository holds the string denoting the repository field in the database.
	FieldRepository = "repository"
	// FieldMarch holds the string denoting the march field in the database.
	FieldMarch = "march"
	// FieldVersion holds the string denoting the version field in the database.
	FieldVersion = "version"
	// FieldRepoVersion holds the string denoting the repo_version field in the database.
	FieldRepoVersion = "repo_version"
	// FieldBuildTime holds the string denoting the build_time field in the database.
	FieldBuildTime = "build_time"
	// FieldBuildDuration holds the string denoting the build_duration field in the database.
	FieldBuildDuration = "build_duration"
	// FieldUpdated holds the string denoting the updated field in the database.
	FieldUpdated = "updated"
	// Table holds the table name of the dbpackage in the database.
	Table = "db_packages"
)

// Columns holds all SQL columns for dbpackage fields.
var Columns = []string{
	FieldID,
	FieldPkgbase,
	FieldPackages,
	FieldStatus,
	FieldSkipReason,
	FieldRepository,
	FieldMarch,
	FieldVersion,
	FieldRepoVersion,
	FieldBuildTime,
	FieldBuildDuration,
	FieldUpdated,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// PkgbaseValidator is a validator for the "pkgbase" field. It is called by the builders before save.
	PkgbaseValidator func(string) error
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus int
	// StatusValidator is a validator for the "status" field. It is called by the builders before save.
	StatusValidator func(int) error
	// RepositoryValidator is a validator for the "repository" field. It is called by the builders before save.
	RepositoryValidator func(string) error
	// MarchValidator is a validator for the "march" field. It is called by the builders before save.
	MarchValidator func(string) error
	// BuildDurationValidator is a validator for the "build_duration" field. It is called by the builders before save.
	BuildDurationValidator func(uint64) error
)
