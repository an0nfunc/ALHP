linters-settings:
  dupl:
    threshold: 100
  goconst:
    min-len: 3
    min-occurrences: 4
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - whyNoLint
      - filepathJoin
  gomnd:
    checks:
      - argument
      - case
      - condition
      - return
    ignored-numbers:
      - '0'
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
      - '6'
      - '7'
      - '8'
      - '9'
      - '10'
    ignored-functions:
      - strings.SplitN
      - os.OpenFile
      - os.MkdirAll
      - os.WriteFile
  govet:
    check-shadowing: false
  lll:
    line-length: 140
  misspell:
    locale: US
  nolintlint:
    allow-unused: false # report any unused nolint directives
    require-explanation: false # don't require an explanation for nolint directives
    require-specific: false # don't require nolint directives to be specific about which linter is being skipped
  tagliatelle:
    case:
      use-field-name: true
      rules:
        # Any struct tag type can be used.
        # Support string case: `camel`, `pascal`, `kebab`, `snake`, `upperSnake`, `goCamel`, `goPascal`, `goKebab`, `goSnake`, `upper`, `lower`, `header`.
        json: snake
        yaml: snake
        xml: camel

linters:
  enable-all: true
  disable:
    - gochecknoglobals
    - depguard
    - gci
    - gofumpt
    - goimports
    - varnamelen
    - funlen
    - cyclop
    - wsl
    - nosnakecase
    - nlreturn
    - godot
    - nestif
    - wrapcheck
    - gocognit
    - gocyclo
    - maintidx
    - nonamedreturns
    - exhaustivestruct
    - exhaustruct
    - forcetypeassert
    - godox
    # remove for new projects
    - errname
    - goerr113
